import time
import RPi.GPIO as GPIO
from consants import *



GPIO.setmode(GPIO.BCM)
GPIO.setup(LATCH_PIN, GPIO.OUT)

GPIO.setup(DATA_PINS[0], GPIO.OUT)
GPIO.setup(CLOCK_PINS[0], GPIO.OUT)
GPIO.setup(DATA_PINS[1], GPIO.OUT)
GPIO.setup(CLOCK_PINS[1], GPIO.OUT)
GPIO.setup(DATA_PINS[2], GPIO.OUT)
GPIO.setup(CLOCK_PINS[2], GPIO.OUT)
GPIO.setup(DATA_PINS[3], GPIO.OUT)
GPIO.setup(CLOCK_PINS[3], GPIO.OUT)
GPIO.setup(DATA_PINS[4], GPIO.OUT)
GPIO.setup(CLOCK_PINS[4], GPIO.OUT)
GPIO.setup(DATA_PINS[5], GPIO.OUT)
GPIO.setup(CLOCK_PINS[5], GPIO.OUT)

states = [GPIO.LOW, GPIO.HIGH]

def send_signal(groups):
    GPIO.output(LATCH_PIN, GPIO.LOW) 
    group_no = 0
    for group in groups:
        board_number = 1
        for byte in group:
            print(f"group={group_no} board={len(group) - board_number} byte= {byte:08b}")
            i = 0
            for i in range(8):
                bit = (byte >> (7-i)) & 1
                GPIO.output(DATA_PINS[group_no], states[bit])
                GPIO.output(CLOCK_PINS[group_no], GPIO.HIGH)
                # time.sleep(0.00001)
                GPIO.output(CLOCK_PINS[group_no], GPIO.LOW)
            board_number += 1
        group_no += 1
    GPIO.output(LATCH_PIN, GPIO.HIGH)

DELAY = 0.2
try:
   send_signal(all_off)
   print("*******All turned OFF********")
   #send_signal(all_on)
   print("all_on")
   time.sleep(0.1)
   #send_signal(all_off)
   print("*******All turned OFF********")
   ##############
   #send_signal(alt_sector_2layer)
   ###########
   #first bit music
   send_signal(adding_circles_going_out_stage1)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage2)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage3)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage4)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage5)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage6)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage7)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage8)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage9)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage10)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage11)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage12)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage13)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage14)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage15)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(rays_with_5th_circle)
   time.sleep(0.3)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage17)
   time.sleep(0.3)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage18)
   time.sleep(0.3)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage19)
   time.sleep(0.3)
   send_signal(all_off)
   send_signal(rays_with_6th_circle)
   time.sleep(0.3)
   send_signal(all_off)

   #Repeat

   send_signal(adding_circles_going_out_stage1)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage2)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage3)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage4)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage5)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage6)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage7)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage8)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage9)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage10)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage11)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage12)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage13)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage14)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage15)
   time.sleep(0.15)
   send_signal(all_off)
   send_signal(rays_with_5th_circle)
   time.sleep(0.3)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage17)
   time.sleep(0.3)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage18)
   time.sleep(0.3)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage19)
   time.sleep(0.3)
   send_signal(all_off)
   send_signal(rays_with_6th_circle)
   time.sleep(0.5)
   send_signal(all_off)

#fast drum

   send_signal(random1)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random2)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random3)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random4)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random5)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random6)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random7)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random8)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random1)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random2)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random3)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random4)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random5)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random6)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random7)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random8)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random1)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random2)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random3)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random4)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random5)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random6)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random7)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random8)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random1)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random2)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random3)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random4)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random5)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random6)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random7)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random8)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random1)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random2)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random3)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random4)
   time.sleep(0.2)
   send_signal(all_off)
   send_signal(random5)
   time.sleep(0.6)
   send_signal(all_off)

#Actual tyawn music starts
#First
   send_signal(ray_pair_1)
   time.sleep(0.45)
   send_signal(all_off)
   send_signal(ray_pair_1n2)
   time.sleep(0.45)
   send_signal(all_off)
   send_signal(ray_pair_1n2n3)
   time.sleep(0.45)
   send_signal(all_off)
   send_signal(ray_pair_1n2n3n4)
   time.sleep(0.5)
   send_signal(all_off)
   send_signal(ray_pair_1n2n3n4n5)
   time.sleep(0.5)
   send_signal(all_off)

#    send_signal(ray_pair_1)
#    time.sleep(0.35)
#    send_signal(all_off)
#    send_signal(ray_pair_1n2)
#    time.sleep(0.35)
#    send_signal(all_off)
#    send_signal(ray_pair_1n2n3)
#    time.sleep(0.35)
#    send_signal(all_off)
#    send_signal(ray_pair_1n2n3n4)
#    time.sleep(0.4)
#    send_signal(all_off)
#    send_signal(ray_pair_1n2n3n4n5)
#    time.sleep(0.4)
#    send_signal(all_off)

#dot running outward on rays
   send_signal(circular_dot_line1)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line2)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line3)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line4)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line5)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line6)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line7)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line8)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line9)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line10)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line11)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line12)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line13)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line14)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line15)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line16)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line17)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line18)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line19)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line20)
   time.sleep(0.05)
   send_signal(all_off)

   #dot running inward on rays
   send_signal(circular_dot_line20)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line19)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line18)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line17)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line16)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line15)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line14)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line13)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line12)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line11)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line10)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line9)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line8)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line7)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line6)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line5)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line4)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line3)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line2)
   time.sleep(0.05)
   send_signal(all_off)
   send_signal(circular_dot_line1)
   time.sleep(0.05)
   send_signal(all_off)
   
               
#Second
   send_signal(adding_circles_going_out_stage1)
   time.sleep(0.45)
   send_signal(all_off)
   send_signal(adding_circles_going_out_stage2)
   time.sleep(0.45)
   send_signal(all_off)
   send_signal(ray_pair_1n2n3)
   time.sleep(0.45)
   send_signal(all_off)
   send_signal(ray_pair_1n2n3n4)
   time.sleep(0.5)
   send_signal(all_off)
   send_signal(ray_pair_1n2n3n4n5)
   time.sleep(0.5)
   send_signal(all_off)


   ##########
   print("pattern")
   time.sleep(1000)
except Exception as e:
    print('*'*50)
    print(e)
    print('*'*50)
finally:
    send_signal(all_off)
    GPIO.cleanup()
    print("Cleaned")
